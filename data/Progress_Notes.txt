01/02/2023

Preliminary Review
1. Understood problem.
2. Analyzed sample data.
3. Read FAQs.


Sample Data
1. Created 5 categories of sample data.
2. All data is grouped by CustID (mentioned in FAQ)
3. Types:
a. 0 - Replica of given sample data
b. 1 - Multiple months for custID added.
c. 2 - Multiple txns on single date for custID added; no multiple months.
d. 3 - Shuffled dates; multiple txns for single date; no multiple months.
e. 4 - Shuffled dates; multiple txns for single date; multiple months.



-------------

javac src/AppMain.java
javac src/Blackboard.java
javac src/DateSorter.java
javac src/Evaluator.java
javac src/ParseBalance.java
javac src/ParseTransaction.java
javac src/Transaction.java

java src/AppMain.java data/input0.csv
 ----------
 
 
 
 01/04/2023
 
 
Can Parse following input data types: 0, 1, 4
DONE - Multiple months parsing.
DONE - Balances computation for multiple months.

PENDING - Need to move call to Blackboard.addCustDates() from Evaluator to ParseTransaction
 
 
Bug: Extra 03/2023 due to invalid data during manual data entry manipulation (Feb 30).


Next major task: Handling multiple transactions on same day.
1. Reorder day txns to put credits before debits (logic ready)
2. Calculate total for that day and condense all amounts into one ending day balance.
3. At this point entire data is converted in the form of type 0,1 input data.
4. Previously developed code on 01/04 should work.


------------

01/10

Parsing logic complete.
DONE: Write to CSV File

PENDING: Sort final balances monthwise
    Soln: TreeMap (preserve natural ordering)




-------------------

README.md


BalanceCalculator
Parses input csv data file containing transactions for different customers for different months.

Computes minimum, maximum and ending balances per month per customer.

Input File: Can be any filename, let's say: input.csv

Output File: Fixed filename generated in root folder: Balances.csv

To Run Code:

I. Compile source code files:

$ javac src/AppMain.java

$ javac src/Blackboard.java

$ javac src/DateSorter.java

$ javac src/Evaluator.java

$ javac src/ParseBalance.java

$ javac src/ParseTransaction.java

$ javac src/Transaction.java

II. Execute source code with input file passed as argument parameter:

$ java src/AppMain.java data/input.csv
